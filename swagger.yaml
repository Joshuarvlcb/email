openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: "1.0"
servers:
  - url: http://example.com
    variables: {}
paths:
  /jobs:
    get:
      tags:
        - Jobs
      summary: get all jobs
      operationId: getalljobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    post:
      tags:
        - Jobs
      summary: create jobs
      operationId: createjobs
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createjobsrequest"
            example:
              company: apple
              position: full stack dev
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /jobs/{id}:
    get:
      tags:
        - Jobs
      summary: get one job
      operationId: getonejob
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: string
            example: "null"
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    put:
      tags:
        - Jobs
      summary: update job
      operationId: updatejob
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: string
            example: 618c42022aaae3b20c6ec14c
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updatejobrequest"
            example:
              company: west-mec
              position: student
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    delete:
      tags:
        - Jobs
      summary: delete job
      operationId: deletejob
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: string
            example: 618c42022aaae3b20c6ec14c
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /auth/register:
    post:
      tags:
        - Auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerrequest"
            example:
              name: josh
              email: joshua@gm.com
              password: 221122112josj
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerrequest"
            example:
              name: josh
              email: joshua@gm.com
              password: 221122112josj
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    createjobsrequest:
      title: createjobsrequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: apple
        position: full stack dev
    updatejobrequest:
      title: updatejobrequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: west-mec
        position: student
    registerrequest:
      title: registerrequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: josh
        email: joshua@gm.com
        password: 221122112josj
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
  - httpBearer: []
tags:
  - name: Jobs
    description: "crud for jobs stored in DB"
  - name: Auth
    description: "register for new users and login for existing user"
